{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";AAMA,SAAS,gBAAgB,CAAC,IAAmB,EAAE,KAAa,EAAE,aAAyB;IACrF,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACxB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,IAAI,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;YAC5C,IAAI,aAAa,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;gBACrC,OAAO,KAAK,CAAA;aACb;iBAAM,IAAI,aAAa,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;gBACrD,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBAC5B,aAAa,CAAC,UAAU,CAAC,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACtE,IAAI,IAAI,IAAI,IAAI,EAAE;wBAChB,OAAO,IAAI,CAAA;qBACZ;yBAAM,IAAI,IAAI,YAAY,MAAM,EAAE;wBACjC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;qBACxC;yBAAM;wBACL,OAAO,IAAI,CAAA;qBACZ;oBACD,OAAO,IAAI,CAAA;gBACb,CAAC,CAAC,CAAA;aACH;iBAAM,IAAI,aAAa,CAAC,UAAU,CAAC,YAAY,MAAM,EAAE;gBACtD,OAAO,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAA;aACzE;iBAAM;gBACL,OAAO,KAAK,CAAA;aACb;SACF;aAAM;YACL,OAAO,KAAK,CAAA;SACb;KACF;SAAM;QACL,IAAI,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;YAC5C,aAAa,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;YAChD,OAAO,aAAa,CAAC,UAAU,CAAC,CAAA;SACjC;aAAM;YACL,OAAO,KAAK,CAAA;SACb;KACF;IACD,OAAO,KAAK,CAAA;AACd,CAAC;AAGD,SAAS,KAAK,CAAC,GAAW,EAAE,KAAa,EAAE,MAAkB;IAC3D,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACzB,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,KAAK;CACN,CAAA","sourcesContent":["\ninterface UserObject {\n  [key: string]: any\n}\n\n\nfunction rename_recursive(keys: Array<string>, value: string, workingObject: UserObject): Boolean {\n  let currentKey = keys[0]\n  if (keys.length > 1) {\n    if (workingObject.hasOwnProperty(currentKey)) {\n      if (workingObject[currentKey] == null) {\n        return false\n      } else if (workingObject[currentKey] instanceof Array) {\n        let restKeys = keys.slice(1)\n        workingObject[currentKey] = workingObject[currentKey].map((item: any) => {\n          if (item == null) {\n            return item\n          } else if (item instanceof Object) {\n            rename_recursive(restKeys, value, item)\n          } else {\n            return item\n          }\n          return item\n        })\n      } else if (workingObject[currentKey] instanceof Object) {\n        return rename_recursive(keys.slice(1), value, workingObject[currentKey])\n      } else {\n        return false\n      }\n    } else {\n      return false\n    }\n  } else {\n    if (workingObject.hasOwnProperty(currentKey)) {\n      workingObject[value] = workingObject[currentKey]\n      delete workingObject[currentKey]\n    } else {\n      return false\n    }\n  }\n  return false\n}\n\n\nfunction rekey(key: string, value: string, object: UserObject) {\n  let keys = key.split('.')\n  rename_recursive(keys, value, object)\n}\n\nmodule.exports = {\n  rekey\n}"]}